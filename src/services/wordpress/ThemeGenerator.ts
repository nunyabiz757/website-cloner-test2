import JSZip from 'jszip';
import { DetectionResult } from '../detection/ComponentDetector';

interface Project {
  name: string;
  url: string;
  html: string;
  css?: string;
  js?: string;
  detection?: DetectionResult;
}

export class ThemeGenerator {
  public async generateTheme(project: Project): Promise<Blob> {
    const zip = new JSZip();
    const themeName = this.sanitizeThemeName(project.name);
    const themeFolder = zip.folder(themeName);

    if (!themeFolder) throw new Error('Failed to create theme folder');

    // Generate style.css with theme header
    const styleCss = this.generateStyleCSS(project);
    themeFolder.file('style.css', styleCss);

    // Generate functions.php with builder support
    const functionsPHP = this.generateFunctionsPHP(project);
    themeFolder.file('functions.php', functionsPHP);

    // Generate template files
    themeFolder.file('index.php', this.generateIndexPHP(project));
    themeFolder.file('header.php', this.generateHeaderPHP(project));
    themeFolder.file('footer.php', this.generateFooterPHP(project));

    // Generate page templates
    themeFolder.file('template-full-width.php', this.generateFullWidthTemplate());
    themeFolder.file('template-landing.php', this.generateLandingTemplate());

    // Add assets
    const assetsFolder = themeFolder.folder('assets');
    if (assetsFolder) {
      const cssFolder = assetsFolder.folder('css');
      const jsFolder = assetsFolder.folder('js');

      if (cssFolder && project.css) {
        cssFolder.file('main.css', project.css);
      }
      if (jsFolder && project.js) {
        jsFolder.file('main.js', project.js);
      }
    }

    // Generate ZIP blob
    return await zip.generateAsync({ type: 'blob' });
  }

  private sanitizeThemeName(name: string): string {
    return name
      .toLowerCase()
      .replace(/[^a-z0-9]+/g, '-')
      .replace(/^-|-$/g, '')
      .substring(0, 50) || 'cloned-theme';
  }

  private generateStyleCSS(project: Project): string {
    return `/*
Theme Name: ${project.name}
Theme URI: ${project.url}
Author: Website Cloner Pro
Author URI: https://websiteclonerpro.com
Description: Theme cloned from ${project.url}
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: ${this.sanitizeThemeName(project.name)}
Tags: custom, cloned, responsive
*/

${project.css || '/* Add your custom CSS here */'}
`;
  }

  private generateFunctionsPHP(project: Project): string {
    const builder = project.detection?.builder || 'none';
    const themeName = this.sanitizeThemeName(project.name);
    const functionName = themeName.replace(/-/g, '_');

    return `<?php
/**
 * Theme Functions
 * Generated by Website Cloner Pro
 */

// Enqueue styles and scripts
function ${functionName}_enqueue_scripts() {
    wp_enqueue_style('${themeName}-style', get_stylesheet_uri());

    if (file_exists(get_template_directory() . '/assets/css/main.css')) {
        wp_enqueue_style('${themeName}-main', get_template_directory_uri() . '/assets/css/main.css', array(), '1.0.0');
    }

    if (file_exists(get_template_directory() . '/assets/js/main.js')) {
        wp_enqueue_script('${themeName}-script', get_template_directory_uri() . '/assets/js/main.js', array(), '1.0.0', true);
    }
}
add_action('wp_enqueue_scripts', '${functionName}_enqueue_scripts');

// Theme setup
function ${functionName}_setup() {
    // Add theme support
    add_theme_support('title-tag');
    add_theme_support('post-thumbnails');
    add_theme_support('custom-logo');
    add_theme_support('html5', array('search-form', 'comment-form', 'comment-list', 'gallery', 'caption'));
    add_theme_support('automatic-feed-links');

    // Register navigation menus
    register_nav_menus(array(
        'primary' => __('Primary Menu', '${themeName}'),
        'footer' => __('Footer Menu', '${themeName}'),
    ));
}
add_action('after_setup_theme', '${functionName}_setup');

// Detected page builder: ${builder}
${builder !== 'none' ? `
// Add page builder support
add_theme_support('${builder}');
add_filter('${builder}_supported_post_types', function($post_types) {
    $post_types[] = 'page';
    $post_types[] = 'post';
    return $post_types;
});
` : ''}

// Widget areas
function ${functionName}_widgets_init() {
    register_sidebar(array(
        'name'          => __('Sidebar', '${themeName}'),
        'id'            => 'sidebar-1',
        'before_widget' => '<div id="%1$s" class="widget %2$s">',
        'after_widget'  => '</div>',
        'before_title'  => '<h2 class="widget-title">',
        'after_title'   => '</h2>',
    ));
}
add_action('widgets_init', '${functionName}_widgets_init');

?>`;
  }

  private generateIndexPHP(project: Project): string {
    return `<?php
/**
 * The main template file
 */
get_header(); ?>

<main id="main" class="site-main">
    <?php
    if (have_posts()) :
        while (have_posts()) : the_post();
            the_content();
        endwhile;
    else :
        echo '<p>No content found</p>';
    endif;
    ?>
</main>

<?php get_footer(); ?>`;
  }

  private generateHeaderPHP(project: Project): string {
    return `<!DOCTYPE html>
<html <?php language_attributes(); ?>>
<head>
    <meta charset="<?php bloginfo('charset'); ?>">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <?php wp_head(); ?>
</head>
<body <?php body_class(); ?>>
<?php wp_body_open(); ?>

<header class="site-header">
    <div class="container">
        <?php
        if (has_custom_logo()) {
            the_custom_logo();
        } else {
            echo '<h1 class="site-title"><a href="' . esc_url(home_url('/')) . '">' . get_bloginfo('name') . '</a></h1>';
        }

        wp_nav_menu(array(
            'theme_location' => 'primary',
            'container' => 'nav',
            'container_class' => 'primary-navigation',
            'fallback_cb' => false,
        ));
        ?>
    </div>
</header>`;
  }

  private generateFooterPHP(project: Project): string {
    return `
<footer class="site-footer">
    <div class="container">
        <?php
        wp_nav_menu(array(
            'theme_location' => 'footer',
            'container' => 'nav',
            'container_class' => 'footer-navigation',
            'fallback_cb' => false,
        ));
        ?>
        <p class="copyright">&copy; <?php echo date('Y'); ?> <?php bloginfo('name'); ?></p>
    </div>
</footer>

<?php wp_footer(); ?>
</body>
</html>`;
  }

  private generateFullWidthTemplate(): string {
    return `<?php
/**
 * Template Name: Full Width
 */
get_header(); ?>

<main id="main" class="site-main full-width">
    <?php
    while (have_posts()) : the_post();
        the_content();
    endwhile;
    ?>
</main>

<?php get_footer(); ?>`;
  }

  private generateLandingTemplate(): string {
    return `<?php
/**
 * Template Name: Landing Page
 */
?>
<!DOCTYPE html>
<html <?php language_attributes(); ?>>
<head>
    <meta charset="<?php bloginfo('charset'); ?>">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <?php wp_head(); ?>
</head>
<body <?php body_class('landing-page'); ?>>
<?php wp_body_open(); ?>

<main id="main" class="site-main">
    <?php
    while (have_posts()) : the_post();
        the_content();
    endwhile;
    ?>
</main>

<?php wp_footer(); ?>
</body>
</html>`;
  }
}
