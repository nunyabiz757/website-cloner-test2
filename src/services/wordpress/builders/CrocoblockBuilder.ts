import * as cheerio from 'cheerio';
import type JSZip from 'jszip';
import type { WordPressExportOptions } from '../../../types/wordpress-export.types';

/**
 * Crocoblock/JetEngine - Dynamic content and templates
 */
export class CrocoblockBuilder {
  async generate(zip: JSZip, options: WordPressExportOptions, files: any): Promise<void> {
    const folder = zip.folder('crocoblock-template')!;
    const jetData = this.convertToCrocoblock(options.html);

    folder.file('jet-template.json', JSON.stringify(jetData, null, 2));
    files.templates = files.templates || [];
    files.templates.push('jet-template.json');

    folder.file('README.md', `# Crocoblock/JetEngine Template\n\nImport via JetEngine > Templates.\n\n**Generated by Website Cloner Pro**`);
  }

  private convertToCrocoblock(html: string): any {
    const $ = cheerio.load(html);
    const widgets: any[] = [];

    $('body').children().each((_, el) => {
      const $el = $(el);
      const tag = $el.prop('tagName')?.toLowerCase();

      if (['script', 'style', 'noscript'].includes(tag)) return;

      widgets.push({
        id: this.generateId(),
        elType: 'widget',
        widgetType: 'jet-listing-dynamic-field',
        settings: {
          dynamic_field_source: 'object',
          dynamic_field_format: 'html',
          dynamic_field_custom: true,
          dynamic_field_custom_content: $.html($el) || '',
        },
      });
    });

    return {
      version: '1.0',
      type: 'jet-listing',
      content: [{
        id: this.generateId(),
        elType: 'section',
        elements: [{
          id: this.generateId(),
          elType: 'column',
          elements: widgets,
        }],
      }],
    };
  }

  private generateId(): string {
    return Math.random().toString(36).substr(2, 9);
  }
}
